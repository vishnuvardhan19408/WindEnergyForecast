{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "799a373a-2347-4d89-ae6b-f413f6e0224d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "def increment(number,by=2):\n",
    "    return number+by\n",
    "print(increment(2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4740918d-a187-4346-9d3b-9e594d034f73",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'greet' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn [7], line 5\u001b[0m\n\u001b[0;32m      2\u001b[0m          \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mHi\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfirstname\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mlastname\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m      3\u001b[0m                         \u001b[38;5;66;03m# print(\"welocome on board\")\u001b[39;00m\n\u001b[1;32m----> 5\u001b[0m \u001b[43mgreet\u001b[49m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mvishnu\u001b[39m\u001b[38;5;124m\"\u001b[39m,\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmadhineni\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'greet' is not defined"
     ]
    }
   ],
   "source": [
    "def greet(firstname,lastname):\n",
    "         print(f\"Hi{firstname} {lastname}\")\n",
    "                        # print(\"welocome on boar\n",
    "            \n",
    "greet(\"vishnu\",\"madhineni\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cd87dc24-4120-4684-9b6a-664f0ef1676c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def multiply(numbers):\n",
    "    total=1\n",
    "    for number in numbers:\n",
    "        total*=number\n",
    "    return total\n",
    "multiply()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
